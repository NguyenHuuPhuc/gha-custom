name: 'Get and Cached dependencies'
description: 'Get and cache dependencies for a project'
inputs:
  caching:
    description: 'The caching strategy to use'
    required: false
    default: 'true'
outputs:
  used-cache:
    description: 'Whether the cached was used.'
    value: ${{ steps.install.outputs.cache }}

runs:
  using: composite
  steps:
    - name: Cached Dependencies
      if: inputs.caching == 'true'
      id: cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching == 'false'
      run: |
        npm ci
        echo "::set-output name=used-cache::'${{ inputs.caching }}'"
      shell: bash